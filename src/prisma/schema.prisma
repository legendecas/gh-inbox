// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Thread {
  id         String   @id
  reasons    String
  updated_at DateTime

  unread       Boolean
  last_read_at DateTime?

  archived    Boolean   @default(false)
  archived_at DateTime?

  bookmarked    Boolean   @default(false)
  bookmarked_at DateTime?

  subject_number             Int
  subject_title              String
  subject_url                String
  subject_type               String
  subject_latest_comment_url String?

  repository_id String

  endpoint_id Int
}

model Repository {
  id        String  @id
  name      String
  full_name String
  private   Boolean

  description String
  fork        Boolean

  html_url String
  owner_id String

  endpoint_id Int
}

model Owner {
  id         String @id
  login      String
  avatar_url String
  type       String

  endpoint_id Int
}

model Label {
  id          String @id
  url         String
  name        String
  color       String
  description String

  repository_id String
  endpoint_id   Int
}

model Subject {
  id           String @id
  subject_type String

  number        Int
  title         String
  state         String
  locked        Boolean @default(false)
  is_draft      Boolean @default(false)
  comment_count Int     @default(0)

  html_url String

  created_at DateTime
  updated_at DateTime
  closed_at  DateTime?
  merged_at  DateTime?

  user_id    String
  user_login String

  repository_id String

  labels String

  merged          Boolean @default(false)
  mergeable       Boolean @default(false)
  mergeable_state String?

  endpoint_id Int
}

model Task {
  id          Int    @id @default(autoincrement())
  type        String
  endpoint_id Int?
  data        String

  last_run DateTime
}

model Endpoint {
  id  Int    @id @default(autoincrement())
  url String

  username String
  token    String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  expires_at DateTime
}
